# Generated by Django 5.2.4 on 2025-10-17 19:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('machines', '0001_initial'),
        ('papers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('minimum_order_quantity', models.PositiveIntegerField(default=100, verbose_name='minimum order quantity')),
                ('deliverable', models.CharField(max_length=50, verbose_name='deliverable')),
                ('sidedness', models.CharField(choices=[('S1', 'Single-sided'), ('S2', 'Double-sided')], default='S2', max_length=2)),
                ('minimum_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_booklet', models.BooleanField(default=False)),
                ('page_count', models.PositiveIntegerField(default=1, help_text='Total pages including cover if booklet')),
                ('cover_sidedness', models.CharField(choices=[('S1', 'Single-sided'), ('S2', 'Double-sided')], default='S1', max_length=2)),
                ('binding', models.CharField(choices=[('NONE', 'None'), ('SADDLE', 'Saddle Stitch'), ('PERFECT', 'Perfect Bind')], default='NONE', max_length=12)),
                ('page_step', models.PositiveIntegerField(default=2, help_text='Enforce even pages (e.g., 4 pages for booklets).')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_popular', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('bleed_mm', models.PositiveIntegerField(default=3)),
                ('gutter_mm', models.PositiveIntegerField(default=2)),
                ('gripper_mm', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='core.servicecategory', verbose_name='category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='core.printcompany', verbose_name='company')),
                ('cover_machine', models.ForeignKey(blank=True, limit_choices_to={'machine_type__in': ['DIGITAL', 'UV_FLA', 'LARGE_FORMAT']}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cover_deliverables', to='machines.machine')),
                ('cover_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cover_deliverables', to='papers.papertype')),
                ('cover_range_material', models.ManyToManyField(related_name='cover_templates', to='papers.papertype')),
                ('machine', models.ForeignKey(limit_choices_to={'machine_type__in': ['DIGITAL', 'UV_FLA', 'LARGE_FORMAT']}, on_delete=django.db.models.deletion.PROTECT, related_name='deliverables', to='machines.machine')),
                ('mandatory_finishings', models.ManyToManyField(blank=True, related_name='mandatory_templates', to='machines.machine')),
                ('optional_finishings', models.ManyToManyField(blank=True, related_name='optional_templates', to='machines.machine')),
                ('range_material', models.ManyToManyField(related_name='templates', to='papers.papertype')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='papers.finalpapersize', verbose_name='size')),
            ],
            options={
                'verbose_name': 'digital template',
                'verbose_name_plural': 'digital templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(default=5)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.producttemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='product_images/', verbose_name='image')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='alt text')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order of the image.', verbose_name='order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='products.producttemplate', verbose_name='product')),
            ],
            options={
                'verbose_name': 'product image',
                'verbose_name_plural': 'product images',
                'ordering': ['order'],
                'unique_together': {('product', 'order')},
            },
        ),
    ]
